"use client"

import { useState } from "react"
import Link from "next/link"
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select"
import { mockSubjects, mockTeachers } from "@/lib/auth-provider"

export default function SubjectsPage() {
  const [selectedYear, setSelectedYear] = useState("1")
  const [selectedCourse, setSelectedCourse] = useState("Science")

  // Get unique years and courses
  const years = Array.from(new Set(mockSubjects.map((subject) => subject.year)))
  const courses = Array.from(new Set(mockSubjects.map((subject) => subject.course)))

  // Filter subjects based on selection
  const filteredSubjects = mockSubjects.filter(
    (subject) => subject.year === Number.parseInt(selectedYear) && subject.course === selectedCourse,
  )

  // Group subjects by name to avoid duplicates
  const groupedSubjects = filteredSubjects.reduce((acc, subject) => {
    if (!acc[subject.name]) {
      acc[subject.name] = subject
    }
    return acc
  }, {})

  const uniqueSubjects = Object.values(groupedSubjects)

  return (
    <div style={{ padding: "1.5rem" }}>
      <h1 style={{ marginBottom: "1.5rem", fontSize: "1.875rem", fontWeight: "bold" }}>Select Subjects</h1>

      <Card style={{ marginBottom: "1.5rem" }}>
        <CardHeader>
          <CardTitle>Filter Subjects</CardTitle>
          <CardDescription>Select your year and course to view relevant subjects</CardDescription>
        </CardHeader>
        <CardContent>
          <div
            style={{
              display: "grid",
              gap: "1rem",
              gridTemplateColumns: "repeat(auto-fit, minmax(200px, 1fr))",
            }}
          >
            <div>
              <label
                htmlFor="year"
                style={{ marginBottom: "0.5rem", display: "block", fontSize: "0.875rem", fontWeight: "500" }}
              >
                Year
              </label>
              <Select value={selectedYear} onValueChange={setSelectedYear}>
                <SelectTrigger id="year">
                  <SelectValue placeholder="Select Year" />
                </SelectTrigger>
                <SelectContent>
                  {years.map((year) => (
                    <SelectItem key={year} value={year.toString()}>
                      Year {year}
                    </SelectItem>
                  ))}
                </SelectContent>
              </Select>
            </div>

            <div>
              <label
                htmlFor="course"
                style={{ marginBottom: "0.5rem", display: "block", fontSize: "0.875rem", fontWeight: "500" }}
              >
                Course
              </label>
              <Select value={selectedCourse} onValueChange={setSelectedCourse}>
                <SelectTrigger id="course">
                  <SelectValue placeholder="Select Course" />
                </SelectTrigger>
                <SelectContent>
                  {courses.map((course) => (
                    <SelectItem key={course} value={course}>
                      {course}
                    </SelectItem>
                  ))}
                </SelectContent>
              </Select>
            </div>
          </div>
        </CardContent>
      </Card>

      <h2 style={{ marginBottom: "1rem", fontSize: "1.25rem", fontWeight: "600" }}>Available Subjects</h2>

      {uniqueSubjects.length > 0 ? (
        <div
          style={{
            display: "grid",
            gap: "1rem",
            gridTemplateColumns: "repeat(auto-fit, minmax(300px, 1fr))",
          }}
        >
          {uniqueSubjects.map((subject) => {
            // Find teacher for this subject
            const teacherId = subject.teacherId
            const teacher = mockTeachers.find((t) => t.id === teacherId)

            return (
              <Card key={subject.id}>
                <CardHeader style={{ paddingBottom: "0.5rem" }}>
                  <CardTitle>{subject.name}</CardTitle>
                  <CardDescription>
                    Year {subject.year} - {subject.course}
                  </CardDescription>
                </CardHeader>
                <CardContent>
                  <p style={{ marginBottom: "1rem", fontSize: "0.875rem" }}>
                    <span style={{ fontWeight: "500" }}>Teacher:</span> {teacher?.name}
                  </p>
                  <Button asChild style={{ width: "100%" }}>
                    <Link href={`/student/subjects/${subject.id}`}>View and Rate</Link>
                  </Button>
                </CardContent>
              </Card>
            )
          })}
        </div>
      ) : (
        <Card>
          <CardContent style={{ padding: "1.5rem", textAlign: "center" }}>
            <p style={{ color: "hsl(var(--muted-foreground))" }}>No subjects found for the selected criteria.</p>
          </CardContent>
        </Card>
      )}
    </div>
  )
}
